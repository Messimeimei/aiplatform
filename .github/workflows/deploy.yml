name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ${{ secrets.ACR_REGISTRY }}
      NAMESPACE: ${{ secrets.ACR_NAMESPACE }}
      REPO: meiss
      IMAGE_NAME: ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/meiss

    steps:
      # 1️⃣ 检出仓库
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 设置短版本号（用于打 tag）
      - name: Compute image tag (short sha)
        id: meta
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> "$GITHUB_OUTPUT"

      # 3️⃣ 登录到阿里云 ACR
      - name: Log in to ACR (personal)
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login $REGISTRY \
            -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      # 4️⃣ 构建镜像（同时打 latest 与 commit sha 两个 tag）
      - name: Build image (latest + sha)
        run: |
          docker build \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:${{ steps.meta.outputs.SHORT_SHA }} \
            .

      # 5️⃣ 推送到 ACR 仓库
      - name: Push images
        run: |
          docker push $IMAGE_NAME:${{ steps.meta.outputs.SHORT_SHA }}
          docker push $IMAGE_NAME:latest

      # 6️⃣ SSH 登录到服务器并自动部署
      - name: Deploy on ECS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            set -euo pipefail
            cd /root/aiplatform

            echo "===== 确保必要目录存在 ====="
            mkdir -p data static/uploads

            echo "===== 登录阿里云 ACR ====="
            echo "${{ secrets.ACR_PASSWORD }}" | docker login $REGISTRY \
              -u "${{ secrets.ACR_USERNAME }}" --password-stdin

            IMAGE_NAME="$REGISTRY/$NAMESPACE/$REPO"
            IMAGE_TAG="${{ steps.meta.outputs.SHORT_SHA }}"

            echo "===== 拉取最新镜像 ====="
            docker pull "$IMAGE_NAME:$IMAGE_TAG"

            echo "===== 更新 compose 文件镜像引用 ====="
            sed -i "s#^\(\s*image:\s*\).*#\1$IMAGE_NAME:$IMAGE_TAG#" docker-compose.prod.yml

            echo "===== 重新部署容器 ====="
            docker compose -f docker-compose.prod.yml down || true
            docker compose -f docker-compose.prod.yml up -d --force-recreate

            echo "===== 当前运行容器 ====="
            docker ps -a

            echo "===== 健康检查 (http://127.0.0.1:80) ====="
            curl -sI http://127.0.0.1:80 || true
